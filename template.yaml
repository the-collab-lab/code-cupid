Transform: AWS::Serverless-2016-10-31
Resources:
  ListRepos:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ListRepos
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: ListRepos
      CodeUri: src/ListRepos
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          REPOS_TABLE_NAME: !Ref Repos
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Repos
      Events:
        CodeCupidApiGETrepos:
          Type: Api
          Properties:
            Path: /repos
            Method: GET
            RestApiId: !Ref CodeCupidApi
  GetRepo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-GetRepo
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetRepo
      CodeUri: src/GetRepo
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Events:
        CodeCupidApiGETreposid:
          Type: Api
          Properties:
            Path: /repos/{id}
            Method: GET
            RestApiId: !Ref CodeCupidApi
      Environment:
        Variables:
          REPOS_TABLE_NAME: !Ref Repos
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Repos
  UpdateRepo:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-UpdateRepo
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: UpdateRepo
      CodeUri: src/UpdateRepo
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Events:
        CodeCupidApiPUTreposid:
          Type: Api
          Properties:
            Path: /repos/{id}
            Method: PUT
            RestApiId: !Ref CodeCupidApi
      Environment:
        Variables:
          REPOS_TABLE_NAME: !Ref Repos
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref Repos
  CodeCupidApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: CodeCupidApi
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /repos/{id}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetRepo.Arn}/invocations
              responses: {}
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateRepo.Arn}/invocations
              responses: {}
          /repos:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListRepos.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  Frontend:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-frontend-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
  Repos:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: API Compute
      Members:
        - ListRepos
        - UpdateRepo
        - GetRepo